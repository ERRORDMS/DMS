//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckScan", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class CheckScan : object
    {
        
        private string AccountIDField;
        
        private ulong AutoKeyField;
        
        private string BankIDField;
        
        private string BranchIDField;
        
        private string CheckIDField;
        
        private string ContactIDField;
        
        private string ContactNameField;
        
        private bool HasErrorField;
        
        private string ImageNameb1Field;
        
        private string ImageNameb2Field;
        
        private string ImageNamef1Field;
        
        private string ImageNamef2Field;
        
        private string ImageNamef3Field;
        
        private bool IsSentField;
        
        private ulong LineAutoKeyField;
        
        private string MICRField;
        
        private ulong TransAutoKeyField;
        
        private byte[] backImage1Field;
        
        private byte[] backImage2Field;
        
        private byte[] frontImage1Field;
        
        private byte[] frontImage2Field;
        
        private byte[] frontImage3Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID
        {
            get
            {
                return this.AccountIDField;
            }
            set
            {
                this.AccountIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AutoKey
        {
            get
            {
                return this.AutoKeyField;
            }
            set
            {
                this.AutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankID
        {
            get
            {
                return this.BankIDField;
            }
            set
            {
                this.BankIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchID
        {
            get
            {
                return this.BranchIDField;
            }
            set
            {
                this.BranchIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckID
        {
            get
            {
                return this.CheckIDField;
            }
            set
            {
                this.CheckIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactID
        {
            get
            {
                return this.ContactIDField;
            }
            set
            {
                this.ContactIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName
        {
            get
            {
                return this.ContactNameField;
            }
            set
            {
                this.ContactNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasError
        {
            get
            {
                return this.HasErrorField;
            }
            set
            {
                this.HasErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageNameb1
        {
            get
            {
                return this.ImageNameb1Field;
            }
            set
            {
                this.ImageNameb1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageNameb2
        {
            get
            {
                return this.ImageNameb2Field;
            }
            set
            {
                this.ImageNameb2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageNamef1
        {
            get
            {
                return this.ImageNamef1Field;
            }
            set
            {
                this.ImageNamef1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageNamef2
        {
            get
            {
                return this.ImageNamef2Field;
            }
            set
            {
                this.ImageNamef2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageNamef3
        {
            get
            {
                return this.ImageNamef3Field;
            }
            set
            {
                this.ImageNamef3Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSent
        {
            get
            {
                return this.IsSentField;
            }
            set
            {
                this.IsSentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong LineAutoKey
        {
            get
            {
                return this.LineAutoKeyField;
            }
            set
            {
                this.LineAutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MICR
        {
            get
            {
                return this.MICRField;
            }
            set
            {
                this.MICRField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TransAutoKey
        {
            get
            {
                return this.TransAutoKeyField;
            }
            set
            {
                this.TransAutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] backImage1
        {
            get
            {
                return this.backImage1Field;
            }
            set
            {
                this.backImage1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] backImage2
        {
            get
            {
                return this.backImage2Field;
            }
            set
            {
                this.backImage2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] frontImage1
        {
            get
            {
                return this.frontImage1Field;
            }
            set
            {
                this.frontImage1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] frontImage2
        {
            get
            {
                return this.frontImage2Field;
            }
            set
            {
                this.frontImage2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] frontImage3
        {
            get
            {
                return this.frontImage3Field;
            }
            set
            {
                this.frontImage3Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFReturn", Namespace="http://schemas.datacontract.org/2004/07/LibraryCore2009")]
    public partial class WCFReturn : object
    {
        
        private ulong AutoKeyField;
        
        private ulong LineAutoKeyField;
        
        private string ReturnErrorCodeField;
        
        private bool SuccessField;
        
        private ulong TransAutoKeyField;
        
        private ulong TransNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AutoKey
        {
            get
            {
                return this.AutoKeyField;
            }
            set
            {
                this.AutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong LineAutoKey
        {
            get
            {
                return this.LineAutoKeyField;
            }
            set
            {
                this.LineAutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnErrorCode
        {
            get
            {
                return this.ReturnErrorCodeField;
            }
            set
            {
                this.ReturnErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TransAutoKey
        {
            get
            {
                return this.TransAutoKeyField;
            }
            set
            {
                this.TransAutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TransNo
        {
            get
            {
                return this.TransNoField;
            }
            set
            {
                this.TransNoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMSDocument", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class DMSDocument : object
    {
        
        private string BarCodeField;
        
        private string CategoryIDField;
        
        private string CategoryID2Field;
        
        private ServiceReference1.DMSContact[] ContactsListField;
        
        private ServiceReference1.DMSCategory[] DMSCategoriesListField;
        
        private System.DateTime DateTimeAddedField;
        
        private System.DateTime DateTimeCreatedField;
        
        private string DocTypeIDField;
        
        private ServiceReference1.DMSDocumentLine[] LinesListField;
        
        private string ManualFileNoField;
        
        private ServiceReference1.DMSSearchKeys[] SearchKeysListField;
        
        private string SubCategoryIDField;
        
        private string SubjectIDField;
        
        private ulong TransAutoKeyField;
        
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BarCode
        {
            get
            {
                return this.BarCodeField;
            }
            set
            {
                this.BarCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryID
        {
            get
            {
                return this.CategoryIDField;
            }
            set
            {
                this.CategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryID2
        {
            get
            {
                return this.CategoryID2Field;
            }
            set
            {
                this.CategoryID2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.DMSContact[] ContactsList
        {
            get
            {
                return this.ContactsListField;
            }
            set
            {
                this.ContactsListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.DMSCategory[] DMSCategoriesList
        {
            get
            {
                return this.DMSCategoriesListField;
            }
            set
            {
                this.DMSCategoriesListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded
        {
            get
            {
                return this.DateTimeAddedField;
            }
            set
            {
                this.DateTimeAddedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeCreated
        {
            get
            {
                return this.DateTimeCreatedField;
            }
            set
            {
                this.DateTimeCreatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID
        {
            get
            {
                return this.DocTypeIDField;
            }
            set
            {
                this.DocTypeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.DMSDocumentLine[] LinesList
        {
            get
            {
                return this.LinesListField;
            }
            set
            {
                this.LinesListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManualFileNo
        {
            get
            {
                return this.ManualFileNoField;
            }
            set
            {
                this.ManualFileNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.DMSSearchKeys[] SearchKeysList
        {
            get
            {
                return this.SearchKeysListField;
            }
            set
            {
                this.SearchKeysListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubCategoryID
        {
            get
            {
                return this.SubCategoryIDField;
            }
            set
            {
                this.SubCategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectID
        {
            get
            {
                return this.SubjectIDField;
            }
            set
            {
                this.SubjectIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TransAutoKey
        {
            get
            {
                return this.TransAutoKeyField;
            }
            set
            {
                this.TransAutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMSContact", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class DMSContact : object
    {
        
        private ulong AutoKeyField;
        
        private string IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AutoKey
        {
            get
            {
                return this.AutoKeyField;
            }
            set
            {
                this.AutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMSCategory", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class DMSCategory : object
    {
        
        private ulong AutoKeyField;
        
        private string IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AutoKey
        {
            get
            {
                return this.AutoKeyField;
            }
            set
            {
                this.AutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMSDocumentLine", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class DMSDocumentLine : object
    {
        
        private ulong AutoKeyField;
        
        private int PagesField;
        
        private ulong TransAutoKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AutoKey
        {
            get
            {
                return this.AutoKeyField;
            }
            set
            {
                this.AutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pages
        {
            get
            {
                return this.PagesField;
            }
            set
            {
                this.PagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TransAutoKey
        {
            get
            {
                return this.TransAutoKeyField;
            }
            set
            {
                this.TransAutoKeyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMSSearchKeys", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class DMSSearchKeys : object
    {
        
        private ulong AutoKeyField;
        
        private string IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AutoKey
        {
            get
            {
                return this.AutoKeyField;
            }
            set
            {
                this.AutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemCatImages", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class ItemCatImages : object
    {
        
        private string CatIDField;
        
        private string NameField;
        
        private byte[] imageBytesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatID
        {
            get
            {
                return this.CatIDField;
            }
            set
            {
                this.CatIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] imageBytes
        {
            get
            {
                return this.imageBytesField;
            }
            set
            {
                this.imageBytesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/OrdersWCF")]
    public partial class Item : object
    {
        
        private ulong AutokeyField;
        
        private string CatIDField;
        
        private double CurrentPurchasePriceField;
        
        private string IDField;
        
        private string NameField;
        
        private double SellPriceField;
        
        private ServiceReference1.ItemImages[] imageBytesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Autokey
        {
            get
            {
                return this.AutokeyField;
            }
            set
            {
                this.AutokeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatID
        {
            get
            {
                return this.CatIDField;
            }
            set
            {
                this.CatIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentPurchasePrice
        {
            get
            {
                return this.CurrentPurchasePriceField;
            }
            set
            {
                this.CurrentPurchasePriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SellPrice
        {
            get
            {
                return this.SellPriceField;
            }
            set
            {
                this.SellPriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.ItemImages[] imageBytes
        {
            get
            {
                return this.imageBytesField;
            }
            set
            {
                this.imageBytesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemImages", Namespace="http://schemas.datacontract.org/2004/07/OrdersWCF")]
    public partial class ItemImages : object
    {
        
        private ulong AutoKeyField;
        
        private string ItemIDField;
        
        private string NameField;
        
        private double SellPriceField;
        
        private string catIDField;
        
        private byte[] imageBytesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AutoKey
        {
            get
            {
                return this.AutoKeyField;
            }
            set
            {
                this.AutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID
        {
            get
            {
                return this.ItemIDField;
            }
            set
            {
                this.ItemIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SellPrice
        {
            get
            {
                return this.SellPriceField;
            }
            set
            {
                this.SellPriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string catID
        {
            get
            {
                return this.catIDField;
            }
            set
            {
                this.catIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] imageBytes
        {
            get
            {
                return this.imageBytesField;
            }
            set
            {
                this.imageBytesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POSClients", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class POSClients : object
    {
        
        private string IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POSItems", Namespace="http://schemas.datacontract.org/2004/07/LibraryCore2009.POS")]
    public partial class POSItems : object
    {
        
        private string IDField;
        
        private string NameField;
        
        private double PriceField;
        
        private double QtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Qty
        {
            get
            {
                return this.QtyField;
            }
            set
            {
                this.QtyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueSection", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class QueueSection : object
    {
        
        private string IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueLocation", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class QueueLocation : object
    {
        
        private string IDField;
        
        private string NameField;
        
        private string SectionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SectionID
        {
            get
            {
                return this.SectionIDField;
            }
            set
            {
                this.SectionIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueTrans", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLib")]
    public partial class QueueTrans : object
    {
        
        private long AutoKeyField;
        
        private System.DateTime DateField;
        
        private System.DateTime DateTimeFinishedField;
        
        private bool IsFinishedField;
        
        private long QueueNoField;
        
        private string SectionIDField;
        
        private string UserFinishedItField;
        
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AutoKey
        {
            get
            {
                return this.AutoKeyField;
            }
            set
            {
                this.AutoKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeFinished
        {
            get
            {
                return this.DateTimeFinishedField;
            }
            set
            {
                this.DateTimeFinishedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished
        {
            get
            {
                return this.IsFinishedField;
            }
            set
            {
                this.IsFinishedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QueueNo
        {
            get
            {
                return this.QueueNoField;
            }
            set
            {
                this.QueueNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SectionID
        {
            get
            {
                return this.SectionIDField;
            }
            set
            {
                this.SectionIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFinishedIt
        {
            get
            {
                return this.UserFinishedItField;
            }
            set
            {
                this.UserFinishedItField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceAction", Namespace="http://schemas.datacontract.org/2004/07/ToolsCore2009.Defaults2009")]
    public enum SourceAction : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetInvoiced = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetHasFinshed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetIsApproved = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAlSahlService")]
    public interface IAlSahlService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/getActivePatientsSerTable", ReplyAction="http://tempuri.org/IAlSahlService/getActivePatientsSerTableResponse")]
        System.Threading.Tasks.Task<string> getActivePatientsSerTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/InsertCheck", ReplyAction="http://tempuri.org/IAlSahlService/InsertCheckResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> InsertCheckAsync(ServiceReference1.CheckScan check, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/UpdateServerChecks", ReplyAction="http://tempuri.org/IAlSahlService/UpdateServerChecksResponse")]
        System.Threading.Tasks.Task UpdateServerChecksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/DeleteCheck", ReplyAction="http://tempuri.org/IAlSahlService/DeleteCheckResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> DeleteCheckAsync(ulong TransAutoKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/UpdateCheckInfo", ReplyAction="http://tempuri.org/IAlSahlService/UpdateCheckInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateCheckInfoAsync(string TransNo, System.DateTime Date, string UserID, string BankID, string BranchID, string AccountID, string CheckID, string OldBankID, string OldBranchID, string OldAccountID, string OldCheckID, string Notes, string MICR, ulong AutoKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveChecksTrans", ReplyAction="http://tempuri.org/IAlSahlService/SaveChecksTransResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveChecksTransAsync(string myTrans, string ID, string Deletedcheckstbl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetAutoIcrementID", ReplyAction="http://tempuri.org/IAlSahlService/GetAutoIcrementIDResponse")]
        System.Threading.Tasks.Task<string> GetAutoIcrementIDAsync(System.DateTime Birthdate, string MainCatID, string GenderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/InsertDMSDocumentLine", ReplyAction="http://tempuri.org/IAlSahlService/InsertDMSDocumentLineResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> InsertDMSDocumentLineAsync(byte[] imageBytes, string Ext, ServiceReference1.DMSDocument doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/InsertImage", ReplyAction="http://tempuri.org/IAlSahlService/InsertImageResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> InsertImageAsync(byte[] imageBytes, string UserID, string ext, ulong TransAutoKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetImage", ReplyAction="http://tempuri.org/IAlSahlService/GetImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetImageAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetDocument", ReplyAction="http://tempuri.org/IAlSahlService/GetDocumentResponse")]
        System.Threading.Tasks.Task<byte[]> GetDocumentAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetContactDocuments", ReplyAction="http://tempuri.org/IAlSahlService/GetContactDocumentsResponse")]
        System.Threading.Tasks.Task<string[]> GetContactDocumentsAsync(string ContactID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetDocumentName", ReplyAction="http://tempuri.org/IAlSahlService/GetDocumentNameResponse")]
        System.Threading.Tasks.Task<string> GetDocumentNameAsync(ulong AutoKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/DigitalDeleteDocument", ReplyAction="http://tempuri.org/IAlSahlService/DigitalDeleteDocumentResponse")]
        System.Threading.Tasks.Task<bool> DigitalDeleteDocumentAsync(ulong InfoAutoKey, string UserID, string DeleteNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/InPatientPerformaInvoice", ReplyAction="http://tempuri.org/IAlSahlService/InPatientPerformaInvoiceResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> InPatientPerformaInvoiceAsync(string myTrans, string serMedicationsTbl, bool _isFirst, bool CloseFile, ulong SourcePanReportNo, string SourcePanReportBookID, ulong SourceInfoAutoKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveInsuranceOutPatientPerformaInvoice", ReplyAction="http://tempuri.org/IAlSahlService/SaveInsuranceOutPatientPerformaInvoiceResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveInsuranceOutPatientPerformaInvoiceAsync(string myTrans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/getAllItemsCatsWithImages", ReplyAction="http://tempuri.org/IAlSahlService/getAllItemsCatsWithImagesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ItemCatImages[]> getAllItemsCatsWithImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/addItem", ReplyAction="http://tempuri.org/IAlSahlService/addItemResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Item> addItemAsync(string id, string name, double sellprice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/addItemImage", ReplyAction="http://tempuri.org/IAlSahlService/addItemImageResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ItemImages> addItemImageAsync(string id, byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/getAllItemsWithImages", ReplyAction="http://tempuri.org/IAlSahlService/getAllItemsWithImagesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ItemImages[]> getAllItemsWithImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/getAllItemsWithImages2", ReplyAction="http://tempuri.org/IAlSahlService/getAllItemsWithImages2Response")]
        System.Threading.Tasks.Task<ServiceReference1.ItemImages[]> getAllItemsWithImages2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/updateItemImage", ReplyAction="http://tempuri.org/IAlSahlService/updateItemImageResponse")]
        System.Threading.Tasks.Task updateItemImageAsync(ulong AutoKey, byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/ItemImageFound", ReplyAction="http://tempuri.org/IAlSahlService/ItemImageFoundResponse")]
        System.Threading.Tasks.Task<bool> ItemImageFoundAsync(string ItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/DeleteItemImage", ReplyAction="http://tempuri.org/IAlSahlService/DeleteItemImageResponse")]
        System.Threading.Tasks.Task DeleteItemImageAsync(ulong AutoKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveItemsTransfer2015", ReplyAction="http://tempuri.org/IAlSahlService/SaveItemsTransfer2015Response")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveItemsTransfer2015Async(string serMyDataSet, bool IsToCopy, ulong FromNo, string FromBookID, string FromTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveJournal", ReplyAction="http://tempuri.org/IAlSahlService/SaveJournalResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveJournalAsync(string myTrans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveLab", ReplyAction="http://tempuri.org/IAlSahlService/SaveLabResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveLabAsync(
                    string serUnderWorkServicesDetailTable, 
                    ulong No, 
                    string BookID, 
                    string serResultsTable, 
                    bool InPatient, 
                    ulong ReceptionNo, 
                    string ReceptionBookID, 
                    ulong AdmissionNo, 
                    string AdmissionBookID, 
                    System.DateTime date, 
                    string PatientID, 
                    string PatientName, 
                    string AgeGroupID, 
                    decimal Age, 
                    string GenderID, 
                    string DoctorID, 
                    string Notes, 
                    ulong OrderNo, 
                    string OrderBookID, 
                    ulong OldNo, 
                    string OldBookID, 
                    string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveMedRecpTrans", ReplyAction="http://tempuri.org/IAlSahlService/SaveMedRecpTransResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveMedRecpTransAsync(string myTrans, string PatientStatus, bool HasDataFromOrder, string OrderNo, string OrderBookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveNursService", ReplyAction="http://tempuri.org/IAlSahlService/SaveNursServiceResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveNursServiceAsync(string serNurseServicesTable, string serNurseOrdersTable, bool IsOutPatient, bool CloseFile, string serNursingNoteInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetPatientStatus", ReplyAction="http://tempuri.org/IAlSahlService/GetPatientStatusResponse")]
        System.Threading.Tasks.Task<string> GetPatientStatusAsync(ulong SourceInfoAutoKey, string PatientID, string TypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SavePOStbl", ReplyAction="http://tempuri.org/IAlSahlService/SavePOStblResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SavePOStblAsync(string myTrans, string NotesTB, string PaidTB, string DiscountTB, string LeftFromPaidTB, string ServiceNEB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetPOSClients", ReplyAction="http://tempuri.org/IAlSahlService/GetPOSClientsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.POSClients[]> GetPOSClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SavePOSOrder", ReplyAction="http://tempuri.org/IAlSahlService/SavePOSOrderResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SavePOSOrderAsync(ServiceReference1.POSItems[] pOSItems, string UserID, string SectionID, bool Isnew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetQueueSections", ReplyAction="http://tempuri.org/IAlSahlService/GetQueueSectionsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.QueueSection[]> GetQueueSectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetQueueLocations", ReplyAction="http://tempuri.org/IAlSahlService/GetQueueLocationsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.QueueLocation[]> GetQueueLocationsAsync(string SectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/InsertQueueTrans", ReplyAction="http://tempuri.org/IAlSahlService/InsertQueueTransResponse")]
        System.Threading.Tasks.Task<long> InsertQueueTransAsync(ServiceReference1.QueueSection section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SetFinished", ReplyAction="http://tempuri.org/IAlSahlService/SetFinishedResponse")]
        System.Threading.Tasks.Task SetFinishedAsync(ServiceReference1.QueueTrans trans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetNewestTrans", ReplyAction="http://tempuri.org/IAlSahlService/GetNewestTransResponse")]
        System.Threading.Tasks.Task<ServiceReference1.QueueTrans> GetNewestTransAsync(ServiceReference1.QueueSection section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetNewestFinishedTrans", ReplyAction="http://tempuri.org/IAlSahlService/GetNewestFinishedTransResponse")]
        System.Threading.Tasks.Task<ServiceReference1.QueueTrans> GetNewestFinishedTransAsync(ServiceReference1.QueueSection section, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetLocationID", ReplyAction="http://tempuri.org/IAlSahlService/GetLocationIDResponse")]
        System.Threading.Tasks.Task<string> GetLocationIDAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetUserIDbyName", ReplyAction="http://tempuri.org/IAlSahlService/GetUserIDbyNameResponse")]
        System.Threading.Tasks.Task<string> GetUserIDbyNameAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetSectionIDbyUser", ReplyAction="http://tempuri.org/IAlSahlService/GetSectionIDbyUserResponse")]
        System.Threading.Tasks.Task<string> GetSectionIDbyUserAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveTrans", ReplyAction="http://tempuri.org/IAlSahlService/SaveTransResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveTransAsync(string myTrans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveTrans2012", ReplyAction="http://tempuri.org/IAlSahlService/SaveTrans2012Response")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveTrans2012Async(string myTrans, string serPerformaInvoicestbl, bool IsCopy, ServiceReference1.SourceAction sourceAction, bool IsPharmacyOrder, ulong InfoAutoKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveTransportationTrans", ReplyAction="http://tempuri.org/IAlSahlService/SaveTransportationTransResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveTransportationTransAsync(string myTrans, bool HasData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/login", ReplyAction="http://tempuri.org/IAlSahlService/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveVisit", ReplyAction="http://tempuri.org/IAlSahlService/SaveVisitResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveVisitAsync(string Infostr, string Procedure, string Plan, string diagnostics, string Prediag, string Note, string Proceduretbl, string PatientStatus, bool HasAppointment, string Appointment, bool CloseReception, bool IsFollowUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/PrintVote", ReplyAction="http://tempuri.org/IAlSahlService/PrintVoteResponse")]
        System.Threading.Tasks.Task PrintVoteAsync(long VoterID, string[] Names, long RandoNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/SaveVoucher", ReplyAction="http://tempuri.org/IAlSahlService/SaveVoucherResponse")]
        System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveVoucherAsync(string myTrans, string Deletedcashtbl, string Deletedcheckstbl, ulong SourceKey, ulong SourceInfoAutoKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/IsAlive", ReplyAction="http://tempuri.org/IAlSahlService/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetMax", ReplyAction="http://tempuri.org/IAlSahlService/GetMaxResponse")]
        System.Threading.Tasks.Task<ulong> GetMaxAsync(string TypeID, string BookID, bool WithNoLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetNew", ReplyAction="http://tempuri.org/IAlSahlService/GetNewResponse")]
        System.Threading.Tasks.Task<ulong> GetNewAsync(string TypeID, string BookID, bool WithNoLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetDateTime", ReplyAction="http://tempuri.org/IAlSahlService/GetDateTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetDateTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlSahlService/GetTimeZone", ReplyAction="http://tempuri.org/IAlSahlService/GetTimeZoneResponse")]
        System.Threading.Tasks.Task<System.TimeZone> GetTimeZoneAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IAlSahlServiceChannel : ServiceReference1.IAlSahlService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class AlSahlServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IAlSahlService>, ServiceReference1.IAlSahlService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AlSahlServiceClient() : 
                base(AlSahlServiceClient.GetDefaultBinding(), AlSahlServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IAlSahlService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AlSahlServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AlSahlServiceClient.GetBindingForEndpoint(endpointConfiguration), AlSahlServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AlSahlServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AlSahlServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AlSahlServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AlSahlServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AlSahlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> getActivePatientsSerTableAsync()
        {
            return base.Channel.getActivePatientsSerTableAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> InsertCheckAsync(ServiceReference1.CheckScan check, string UserID)
        {
            return base.Channel.InsertCheckAsync(check, UserID);
        }
        
        public System.Threading.Tasks.Task UpdateServerChecksAsync()
        {
            return base.Channel.UpdateServerChecksAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> DeleteCheckAsync(ulong TransAutoKey)
        {
            return base.Channel.DeleteCheckAsync(TransAutoKey);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCheckInfoAsync(string TransNo, System.DateTime Date, string UserID, string BankID, string BranchID, string AccountID, string CheckID, string OldBankID, string OldBranchID, string OldAccountID, string OldCheckID, string Notes, string MICR, ulong AutoKey)
        {
            return base.Channel.UpdateCheckInfoAsync(TransNo, Date, UserID, BankID, BranchID, AccountID, CheckID, OldBankID, OldBranchID, OldAccountID, OldCheckID, Notes, MICR, AutoKey);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveChecksTransAsync(string myTrans, string ID, string Deletedcheckstbl)
        {
            return base.Channel.SaveChecksTransAsync(myTrans, ID, Deletedcheckstbl);
        }
        
        public System.Threading.Tasks.Task<string> GetAutoIcrementIDAsync(System.DateTime Birthdate, string MainCatID, string GenderID)
        {
            return base.Channel.GetAutoIcrementIDAsync(Birthdate, MainCatID, GenderID);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> InsertDMSDocumentLineAsync(byte[] imageBytes, string Ext, ServiceReference1.DMSDocument doc)
        {
            return base.Channel.InsertDMSDocumentLineAsync(imageBytes, Ext, doc);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> InsertImageAsync(byte[] imageBytes, string UserID, string ext, ulong TransAutoKey)
        {
            return base.Channel.InsertImageAsync(imageBytes, UserID, ext, TransAutoKey);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetImageAsync(string name)
        {
            return base.Channel.GetImageAsync(name);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetDocumentAsync(string name)
        {
            return base.Channel.GetDocumentAsync(name);
        }
        
        public System.Threading.Tasks.Task<string[]> GetContactDocumentsAsync(string ContactID)
        {
            return base.Channel.GetContactDocumentsAsync(ContactID);
        }
        
        public System.Threading.Tasks.Task<string> GetDocumentNameAsync(ulong AutoKey)
        {
            return base.Channel.GetDocumentNameAsync(AutoKey);
        }
        
        public System.Threading.Tasks.Task<bool> DigitalDeleteDocumentAsync(ulong InfoAutoKey, string UserID, string DeleteNote)
        {
            return base.Channel.DigitalDeleteDocumentAsync(InfoAutoKey, UserID, DeleteNote);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> InPatientPerformaInvoiceAsync(string myTrans, string serMedicationsTbl, bool _isFirst, bool CloseFile, ulong SourcePanReportNo, string SourcePanReportBookID, ulong SourceInfoAutoKey)
        {
            return base.Channel.InPatientPerformaInvoiceAsync(myTrans, serMedicationsTbl, _isFirst, CloseFile, SourcePanReportNo, SourcePanReportBookID, SourceInfoAutoKey);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveInsuranceOutPatientPerformaInvoiceAsync(string myTrans)
        {
            return base.Channel.SaveInsuranceOutPatientPerformaInvoiceAsync(myTrans);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ItemCatImages[]> getAllItemsCatsWithImagesAsync()
        {
            return base.Channel.getAllItemsCatsWithImagesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Item> addItemAsync(string id, string name, double sellprice)
        {
            return base.Channel.addItemAsync(id, name, sellprice);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ItemImages> addItemImageAsync(string id, byte[] image)
        {
            return base.Channel.addItemImageAsync(id, image);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ItemImages[]> getAllItemsWithImagesAsync()
        {
            return base.Channel.getAllItemsWithImagesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ItemImages[]> getAllItemsWithImages2Async()
        {
            return base.Channel.getAllItemsWithImages2Async();
        }
        
        public System.Threading.Tasks.Task updateItemImageAsync(ulong AutoKey, byte[] image)
        {
            return base.Channel.updateItemImageAsync(AutoKey, image);
        }
        
        public System.Threading.Tasks.Task<bool> ItemImageFoundAsync(string ItemID)
        {
            return base.Channel.ItemImageFoundAsync(ItemID);
        }
        
        public System.Threading.Tasks.Task DeleteItemImageAsync(ulong AutoKey)
        {
            return base.Channel.DeleteItemImageAsync(AutoKey);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveItemsTransfer2015Async(string serMyDataSet, bool IsToCopy, ulong FromNo, string FromBookID, string FromTypeID)
        {
            return base.Channel.SaveItemsTransfer2015Async(serMyDataSet, IsToCopy, FromNo, FromBookID, FromTypeID);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveJournalAsync(string myTrans)
        {
            return base.Channel.SaveJournalAsync(myTrans);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveLabAsync(
                    string serUnderWorkServicesDetailTable, 
                    ulong No, 
                    string BookID, 
                    string serResultsTable, 
                    bool InPatient, 
                    ulong ReceptionNo, 
                    string ReceptionBookID, 
                    ulong AdmissionNo, 
                    string AdmissionBookID, 
                    System.DateTime date, 
                    string PatientID, 
                    string PatientName, 
                    string AgeGroupID, 
                    decimal Age, 
                    string GenderID, 
                    string DoctorID, 
                    string Notes, 
                    ulong OrderNo, 
                    string OrderBookID, 
                    ulong OldNo, 
                    string OldBookID, 
                    string UserID)
        {
            return base.Channel.SaveLabAsync(serUnderWorkServicesDetailTable, No, BookID, serResultsTable, InPatient, ReceptionNo, ReceptionBookID, AdmissionNo, AdmissionBookID, date, PatientID, PatientName, AgeGroupID, Age, GenderID, DoctorID, Notes, OrderNo, OrderBookID, OldNo, OldBookID, UserID);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveMedRecpTransAsync(string myTrans, string PatientStatus, bool HasDataFromOrder, string OrderNo, string OrderBookID)
        {
            return base.Channel.SaveMedRecpTransAsync(myTrans, PatientStatus, HasDataFromOrder, OrderNo, OrderBookID);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveNursServiceAsync(string serNurseServicesTable, string serNurseOrdersTable, bool IsOutPatient, bool CloseFile, string serNursingNoteInfo)
        {
            return base.Channel.SaveNursServiceAsync(serNurseServicesTable, serNurseOrdersTable, IsOutPatient, CloseFile, serNursingNoteInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetPatientStatusAsync(ulong SourceInfoAutoKey, string PatientID, string TypeID)
        {
            return base.Channel.GetPatientStatusAsync(SourceInfoAutoKey, PatientID, TypeID);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SavePOStblAsync(string myTrans, string NotesTB, string PaidTB, string DiscountTB, string LeftFromPaidTB, string ServiceNEB)
        {
            return base.Channel.SavePOStblAsync(myTrans, NotesTB, PaidTB, DiscountTB, LeftFromPaidTB, ServiceNEB);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.POSClients[]> GetPOSClientsAsync()
        {
            return base.Channel.GetPOSClientsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SavePOSOrderAsync(ServiceReference1.POSItems[] pOSItems, string UserID, string SectionID, bool Isnew)
        {
            return base.Channel.SavePOSOrderAsync(pOSItems, UserID, SectionID, Isnew);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.QueueSection[]> GetQueueSectionsAsync()
        {
            return base.Channel.GetQueueSectionsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.QueueLocation[]> GetQueueLocationsAsync(string SectionID)
        {
            return base.Channel.GetQueueLocationsAsync(SectionID);
        }
        
        public System.Threading.Tasks.Task<long> InsertQueueTransAsync(ServiceReference1.QueueSection section)
        {
            return base.Channel.InsertQueueTransAsync(section);
        }
        
        public System.Threading.Tasks.Task SetFinishedAsync(ServiceReference1.QueueTrans trans)
        {
            return base.Channel.SetFinishedAsync(trans);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.QueueTrans> GetNewestTransAsync(ServiceReference1.QueueSection section)
        {
            return base.Channel.GetNewestTransAsync(section);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.QueueTrans> GetNewestFinishedTransAsync(ServiceReference1.QueueSection section, string UserID)
        {
            return base.Channel.GetNewestFinishedTransAsync(section, UserID);
        }
        
        public System.Threading.Tasks.Task<string> GetLocationIDAsync(string UserID)
        {
            return base.Channel.GetLocationIDAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> GetUserIDbyNameAsync(string UserID)
        {
            return base.Channel.GetUserIDbyNameAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> GetSectionIDbyUserAsync(string UserID)
        {
            return base.Channel.GetSectionIDbyUserAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveTransAsync(string myTrans)
        {
            return base.Channel.SaveTransAsync(myTrans);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveTrans2012Async(string myTrans, string serPerformaInvoicestbl, bool IsCopy, ServiceReference1.SourceAction sourceAction, bool IsPharmacyOrder, ulong InfoAutoKey)
        {
            return base.Channel.SaveTrans2012Async(myTrans, serPerformaInvoicestbl, IsCopy, sourceAction, IsPharmacyOrder, InfoAutoKey);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveTransportationTransAsync(string myTrans, bool HasData)
        {
            return base.Channel.SaveTransportationTransAsync(myTrans, HasData);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string UserName, string Password)
        {
            return base.Channel.loginAsync(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveVisitAsync(string Infostr, string Procedure, string Plan, string diagnostics, string Prediag, string Note, string Proceduretbl, string PatientStatus, bool HasAppointment, string Appointment, bool CloseReception, bool IsFollowUp)
        {
            return base.Channel.SaveVisitAsync(Infostr, Procedure, Plan, diagnostics, Prediag, Note, Proceduretbl, PatientStatus, HasAppointment, Appointment, CloseReception, IsFollowUp);
        }
        
        public System.Threading.Tasks.Task PrintVoteAsync(long VoterID, string[] Names, long RandoNumber)
        {
            return base.Channel.PrintVoteAsync(VoterID, Names, RandoNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.WCFReturn> SaveVoucherAsync(string myTrans, string Deletedcashtbl, string Deletedcheckstbl, ulong SourceKey, ulong SourceInfoAutoKey)
        {
            return base.Channel.SaveVoucherAsync(myTrans, Deletedcashtbl, Deletedcheckstbl, SourceKey, SourceInfoAutoKey);
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync()
        {
            return base.Channel.IsAliveAsync();
        }
        
        public System.Threading.Tasks.Task<ulong> GetMaxAsync(string TypeID, string BookID, bool WithNoLock)
        {
            return base.Channel.GetMaxAsync(TypeID, BookID, WithNoLock);
        }
        
        public System.Threading.Tasks.Task<ulong> GetNewAsync(string TypeID, string BookID, bool WithNoLock)
        {
            return base.Channel.GetNewAsync(TypeID, BookID, WithNoLock);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetDateTimeAsync()
        {
            return base.Channel.GetDateTimeAsync();
        }
        
        public System.Threading.Tasks.Task<System.TimeZone> GetTimeZoneAsync()
        {
            return base.Channel.GetTimeZoneAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAlSahlService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAlSahlService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:9100/AlSahlService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return AlSahlServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IAlSahlService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return AlSahlServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IAlSahlService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IAlSahlService,
        }
    }
}
