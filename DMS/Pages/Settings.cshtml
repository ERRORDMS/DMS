@page
@model DMS.Pages.SettingsModel
@{
    ViewData["Title"] = "Settings";
    Layout = "~/Pages/_Layout.cshtml";

    string userId = "";
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;

    if (claimsIdentity != null)
    {
        var c = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);

        userId = c.Value;
    }

}


<h2 class="content-block" >Enterprise Settings</h2>
<h2 class="content-block" id="enterpriseCode">Your Enterprise code: XXXXXX</h2>

<div>
    <h2 class="content-block">Users</h2>
    @(Html.DevExtreme().DataGrid()
        .ID("userList")

.DataSource(d => d.Mvc()
    .Controller("api/Permissions")
    .LoadMethod("GET")
    .LoadAction("Users")
    .Key("ID")
).KeyExpr("ID")
            .ShowRowLines(true)
            .ShowBorders(true)
            .ColumnAutoWidth(true)
                    /*.RowDragging(rd => rd
                        .AllowDropInsideItem(true)
                        .AllowReordering(true)
                        .OnDragChange("onDragChange")
                        .OnReorder("onReorder")
                        .ShowDragIcons(true)
                    )*/
                    .ElementAttr("class", "content-block")

            .Columns(columns =>
            {
                columns.Add().DataField("Email")
                    .Caption("User");
                columns.Add()
               .Caption("Manage")
               .Width(100)
               .Alignment(HorizontalAlignment.Center)
               .AllowFiltering(false)
               .AllowSorting(false)
               .CellTemplate(new JS("cellTemplate"));


            })
        )
</div>
<br />
<div>
    <h2 class="content-block">Role</h2>
    @(Html.DevExtreme().DataGrid()
        .ID("rolesList")

.DataSource(d => d.Mvc()
    .Controller("api/Permissions")
    .LoadMethod("GET")
    .LoadAction("Roles")
    .Key("AutoKey")
).KeyExpr("AutoKey")
            .ShowRowLines(true)
            .ShowBorders(true)
            .ColumnAutoWidth(true)
                    /*.RowDragging(rd => rd
                        .AllowDropInsideItem(true)
                        .AllowReordering(true)
                        .OnDragChange("onDragChange")
                        .OnReorder("onReorder")
                        .ShowDragIcons(true)
                    )*/
                    .ElementAttr("class", "content-block")
            .Columns(columns =>
            {
                columns.Add().DataField("Name")
                    .Caption("Role");
                columns.Add()
               .Caption("Manage")
               .Width(100)
               .Alignment(HorizontalAlignment.Center)
               .AllowFiltering(false)
               .AllowSorting(false)
               .CellTemplate(new JS("cellTemplate"));


            })
        )
</div>

<script>
        //<![CDATA[
    function cellTemplate(element, cellInfo) {
        $('<a/>')
            .text("Manage")
            .click(function () {
                onEdit(element, cellInfo);
            })
            .appendTo(element);
    }

    $(document).ready(function () {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.open("GET", "api/Permissions/GetCode", false); 
        xmlHttp.send();
        $('#enterpriseCode').text("Your Enterprise code: " + xmlHttp.responseText);

    });
</script>