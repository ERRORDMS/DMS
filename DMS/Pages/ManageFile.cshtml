@page
@model DMS.Pages.ManageFileModel
@{
    ViewData["Title"] = Localizer["Title"];

    Layout = "~/Pages/_Layout.cshtml";

    long AutoKey = 0;

    AutoKey = Convert.ToInt64(Request.Query["AutoKey"]);


    if (AutoKey == 0)
    {
        <script>
            window.location = 'Dashboard';
        </script>
    }

}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<style>

    .main-block {
        max-width: 900px;
        min-width: 700px;
        margin-left: 5rem;
    }
</style>



<h2 class="content-block">@Localizer["ManageFile"]</h2>


<br />
@(Html.DevExtreme().Button()
        .Icon("save")
        .Text(Localizer["Save"].Value)
        .OnClick("saveFile")
        .ElementAttr("class", "content-block")

    )
@(Html.DevExtreme().Button()
        .Icon("trash")
        .Text(Localizer["DeleteFile"].Value)
        .OnClick("deleteFile")
        .ElementAttr("class", "content-block")

    )
<br />

<div class="main-block">
    <div class="dx-fieldset">

        <div class="dx-field">
            <div class="dx-field-label">Contacts:</div>
            <div class="dx-field-value">
                @(Html.DevExtreme().TagBox()
    .DisplayExpr("Name")
    /*
        .DataSource(d => d.Mvc()
               .Controller("Contacts")
               .LoadAction("Get")
               .Key("AutoKey")
           )
        */
.ID("contactsTagBox")
.Name("contactsTagBox")
    .ValueExpr("AutoKey")
    .HideSelectedItems(true)
    .ShowClearButton(true)
    .SearchExpr("Name")
              .SearchEnabled(true)
                    )
            </div>
        </div>
        <div class="dx-field">
            <div class="dx-field-label">Search Keys:</div>
            <div class="dx-field-value">
                @(Html.DevExtreme().TagBox()
                        /*
        .DataSource(d => d.Mvc()
                   .Controller("SearchKeys")
                   .LoadAction("Get")
                   .Key("AutoKey")
               )*/
        .DisplayExpr("Name")

    .ID("searchKeysTagBox")
    .Name("searchKeysTagBox")
        .ValueExpr("AutoKey")
        .HideSelectedItems(true)
        .ShowClearButton(false)
        .SearchExpr("Name")
                  .SearchEnabled(true)
                        )
            </div>
        </div>
        <div class="dx-field">
            @(Html.DevExtreme().TreeList()
            .ID("treeList")

    .DataSource(d => d.Mvc()
        .Controller("Categories")
        .LoadAction("Get")
        .Key("AutoKey")
    ).KeyExpr("AutoKey")
    //.OnSelectionChanged("onValueChangedTree")
    .ElementAttr("class","categoriesTreeList")
    .SearchPanel(s=>s
                        .Visible(true)
                        .Placeholder("Search")
                        .SearchVisibleColumnsOnly(true)
                )
                //.OnContentReady("treeReady")

                .ParentIdExpr("FatherAutoKey")
                .ShowRowLines(true)
        .Selection(s => s.Mode(SelectionMode.Multiple))
                .ShowBorders(true)
                .ColumnAutoWidth(true)
                .Columns(columns =>
                {
                    columns.Add().DataField("Name")
                        .Caption("Category Name");

                })
            )
        </div>
    </div>


</div>
<script>
    var categories;
    var keys;
        var contacts;
    $(document).ready(function () {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", "api/Contacts", false);
        xhr.send();
        var r = JSON.parse(xhr.responseText);
        var viewerdataSource = new DevExpress.data.DataSource({
            store: r.data,
            pageSize: 5,
            paginate: true
        });

        $("#contactsTagBox").dxTagBox({
            dataSource: viewerdataSource,
            displayExpr: "Name",
            valueExpr: "AutoKey",
            hideSelectedItems: true,
            searchEnabled: true,
            placeholder: "Select",
            //  value: [862]
        });
      
        xhr = new XMLHttpRequest();
        xhr.open("GET", "api/SearchKeys", false);
        xhr.send();

        r = JSON.parse(xhr.responseText);
        viewerdataSource = new DevExpress.data.DataSource({
            store: r.data,
            pageSize: 5,
            paginate: true
        });

        $("#searchKeysTagBox").dxTagBox({
            dataSource: viewerdataSource,
            displayExpr: "Name",
            valueExpr: "AutoKey",
            hideSelectedItems: true,
            searchEnabled: true,
            placeholder: "Select",
            //  value: [862]
        });

        var xmlHttp = new XMLHttpRequest();
        xmlHttp.open("GET", "api/Upload/GetFileInfo?InfoAutoKey=" + @AutoKey, false);
        xmlHttp.send();

        var res = JSON.parse(xmlHttp.responseText);
        categories = res.Categories;
        keys = res.SearchKeys;
        contacts = res.Contacts;

        
        $("#contactsTagBox").dxTagBox("instance").option("value", contacts);
        $("#searchKeysTagBox").dxTagBox("instance").option("value", keys);
        //$('#treeList').dxTreeList('instance').selectRows(, false);
        $('#treeList').dxTreeList({
            selectedRowKeys: categories.map(a => a.AutoKey),
            autoExpandAll: true
        });
    });

    function saveFile() {
        categories = $('#treeList').dxTreeList('instance').getSelectedRowsData();

            keys = $("#searchKeysTagBox").dxTagBox("instance").option("value");
            contacts = $("#contactsTagBox").dxTagBox("instance").option("value");

            var outputCats = []
            $.each(categories, function (i, e) {
                if (e.AutoKey != null)
                    outputCats.push(e.AutoKey);
                else
                    outputCats.push(e);
            });

            var outputKeys = []
            $.each(keys, function (i, e) {
                if (e.AutoKey != null)
                    outputKeys.push(e.AutoKey);
                else
                    outputKeys.push(e);
            });

            var outputCons = []
            $.each(contacts, function (i, e) {
                if (e.AutoKey != null)
                    outputCons.push(e.AutoKey);
                else
                    outputCons.push(e);
            });

           /* var outputCats = $(categories).map(function () {
                if (this.AutoKey != null)
                    return this.AutoKey;
                else
                    return this;
            });

            var outputKeys = $(keys).map(function () {
                if (this.AutoKey != null)
                    return this.AutoKey;
                else
                    return this;
            });

            var outputCons = $(contacts).map(function () {
                if (this.AutoKey != null)
                    return this.AutoKey;
                else
                    return this;
            });*/



               const xhr = new XMLHttpRequest();

                xhr.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        var t = this.responseText;
                        var obj = JSON.parse(t);

                        var statusCode = obj.StatusCode;
                        if (statusCode == 0) {
                            window.location = "Dashboard";
                        }
                    }
                }


                xhr.open("POST", 'api/Upload/EditFile', true);

                const fd = new FormData();

        fd.append('AutoKey', @AutoKey);
        fd.append('categories', JSON.stringify(outputCats))
        fd.append('contacts', JSON.stringify(outputCons));
        fd.append('keys', JSON.stringify(outputKeys));

                xhr.send(fd);

        }


        function deleteFile() {
            const xhr = new XMLHttpRequest();

        xhr.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
            window.location = "Dashboard";
            }
        }

        xhr.open("POST", 'api/Upload/DeleteFile', true);

            const fd = new FormData();

            fd.append('AutoKey', @AutoKey);
            xhr.send(fd);

    }



</script>
