@page
@model DMS.Pages.FilesModel
@{
    ViewData["Title"] = Localizer["Title"];
    Layout = "~/Pages/_Layout.cshtml";
}

@using DMS.Models
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@section Styles
{

    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://cdn.datatables.net/rowreorder/1.2.7/css/rowReorder.bootstrap4.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>

    <style>
        .modal-confirm {
            color: #636363;
            width: 400px;
        }

            .modal-confirm .modal-content {
                padding: 20px;
                border-radius: 5px;
                border: none;
                text-align: center;
                font-size: 14px;
            }

            .modal-confirm .modal-header {
                border-bottom: none;
                position: relative;
            }

            .modal-confirm h4 {
                text-align: center;
                font-size: 26px;
                margin: 30px 0 -10px;
            }

            .modal-confirm .close {
                position: absolute;
                top: -5px;
                right: -2px;
            }

            .modal-confirm .modal-body {
                color: #999;
            }

            .modal-confirm .modal-footer {
                border: none;
                text-align: center;
                border-radius: 5px;
                font-size: 13px;
                padding: 10px 15px 25px;
            }

                .modal-confirm .modal-footer a {
                    color: #999;
                }

            .modal-confirm .icon-box {
                width: 80px;
                height: 80px;
                margin: 0 auto;
                border-radius: 50%;
                z-index: 9;
                text-align: center;
                border: 3px solid #f15e5e;
            }

                .modal-confirm .icon-box i {
                    color: #f15e5e;
                    font-size: 46px;
                    display: inline-block;
                    margin-top: 13px;
                }

            .modal-confirm .btn, .modal-confirm .btn:active {
                color: #fff;
                border-radius: 4px;
                background: #60c7c1;
                text-decoration: none;
                transition: all 0.4s;
                line-height: normal;
                min-width: 120px;
                border: none;
                min-height: 40px;
                border-radius: 3px;
                margin: 0 5px;
            }

            .modal-confirm .btn-secondary {
                background: #c1c1c1;
            }

                .modal-confirm .btn-secondary:hover, .modal-confirm .btn-secondary:focus {
                    background: #a8a8a8;
                }

            .modal-confirm .btn-danger {
                background: #f15e5e;
            }

                .modal-confirm .btn-danger:hover, .modal-confirm .btn-danger:focus {
                    background: #ee3535;
                }

        .e-upload .e-upload-actions .e-file-upload-btn, .e-bigger.e-small .e-upload .e-upload-actions .e-file-upload-btn {
            display: none;
        }

        .categoriesContainer {
            max-height: 60vh;
            overflow: auto;
        }

        .uploadFilesDiv {
            overflow: auto;
            height: 50vh;
        }
        .tdDrag {
            cursor: move;
            cursor: -webkit-grab;
            cursor: -moz-grab;
        }
        .tdDrag:active {
            cursor: move;
            cursor: -webkit-grabbing;
            cursor: -moz-grabbing;
        }
    </style>
}


@section Scripts{
    <script src="https://cdn.datatables.net/rowreorder/1.2.7/js/dataTables.rowReorder.min.js"></script>

    <script>


        function onSelectedContactsChanged(e) {
            var c = e.selectedRowsData.map(x => x.Name).join(', ');;
            $("#txtSelectContacts").text(c);

        }

        function onSelectedSearchKeysChanged(e) {
            var s = e.selectedRowsData.map(x => x.Name).join(', ');;
            $("#txtSelectKeys").text(s);
        }

              function download(infokey, linekey, ext, filename) {
                      //  $('#downloadingWait').fadeIn(200);

                        var xmlHttp = new XMLHttpRequest();
                        xmlHttp.onreadystatechange = function () {
                            if (this.readyState == 4 && this.status == 200) {

                    var str = this.responseText;

                        var arr = base64ToArrayBuffer(str);
                                saveByteArray(filename + '.' + ext , arr);
                            }
                            }

                  xmlHttp.open("GET", "api/Upload/Getfile?InfoAutoKey=" + infokey + "&LineAutoKey=" + linekey + "&Ext=" + ext, true);
                    xmlHttp.send();

                }

                function base64ToArrayBuffer(base64) {
                    var binaryString = window.atob(base64);
                    var binaryLen = binaryString.length;
                    var bytes = new Uint8Array(binaryLen);
                    for (var i = 0; i < binaryLen; i++) {
                        var ascii = binaryString.charCodeAt(i);
                        bytes[i] = ascii;
                    }
                    return bytes;
                }

                function saveByteArray(reportName, byte) {

                    var blob = new Blob([byte], { type: '@MimeKit.MimeTypes.GetMimeType(new JS("reportName").Value)' });
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    var fileName = reportName;
                    link.download = fileName;
                    link.click();
                };

            function onFileUpdate(args) {

                console.log(infoAutoKey);
                console.log(lineAutoKey);
                args.customFormData = [{
                    'InfoAutoKey': infoAutoKey
                },
                {
                    'LineAutoKey': lineAutoKey
                }];

            }


            function onUpdateSuccess(args) {
                if (args.operation === 'upload') {

                    $("#updateModal").modal('hide');

                }

        }

        function startUpdate() {

            var uploadObj = document.getElementById("updateFiles").ej2_instances[0];
            uploadObj.upload(uploadObj.getFilesData());
        }

        function onClick() {
                if (txtSearch.value == '' || txtSearch.value == null) {
                    initCats();

                    return;
                }

                var xmlHttp = new XMLHttpRequest();

                xmlHttp.open("GET", "api/Search/Search?sQuery=" + txtSearch.value, false);
                xmlHttp.send();

                var res = JSON.parse(xmlHttp.responseText);

            loadCategories(res.Categories, true);

                loadFiles(res.Files);
            }
    </script>

}
@section Header {

    <div class="header-search-form" id="searchForm">
        <form>
            <div class="input-group">
                <div class="input-group-prepend">
                    <button class="btn" onclick="onClick();">
                        <i class="ti-search"></i>
                    </button>
                </div>
                <input type="text" class="form-control" id="txtSearch" placeholder="Search something..." />
                <div class="input-group-append">
                    <button class="btn header-search-close-btn">
                        <i data-feather="x"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
}

<!-- Content body -->
<div class="content-body">
    <!-- Content -->
    <div class="content">
        <div class="page-header d-flex justify-content-between">
            <h2>Files</h2>
            <a href="#" class="files-toggler">
                <i class="fas fa-bars"></i>
            </a>
        </div>

        <div class="row">
            <div class="col-xl-3 files-sidebar">
                <div class="card border-0">
                    <h6 class="card-title">Categories</h6>
                    <div class="categoriesContainer">
                    <div id="files"></div>
                        </div>
                </div>
            </div>
            <div class="col-xl-9" id="filesDiv">
                <div class="content-title mt-0">
                    <h4>Documents</h4>
                </div>
                <div class="d-md-flex justify-content-between mb-4">
                    <div id="file-actions" class="d-none">
                        <ul class="list-inline">
                            <!--
            <li class="list-inline-item mb-0">
                <a href="javascript:moveFiles()" class="btn btn-outline-light" data-toggle="tooltip" title="Move">
                    <i class="ti-arrow-top-right"></i>
                </a>
            </li>-->
                            <li class="list-inline-item mb-0">
                                <a href="javascript:downloadFiles()" class="btn btn-outline-light" data-toggle="tooltip" title="Download">
                                    <i class="ti-download"></i>
                                </a>
                            </li>
                            <li class="list-inline-item mb-0">
                                <a href="javascript:showDeleteDialog()" class="btn btn-outline-danger" title="Delete">
                                    <i class="ti-trash"></i>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="table-files" class="table table-borderless table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <div class="custom-control custom-checkbox">
                                        <input type="checkbox" class="custom-control-input" id="files-select-all">
                                        <label class="custom-control-label" for="files-select-all"></label>
                                    </div>
                                </th>
                                <th>#</th>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Created</th>
                                <th>Note</th>
                                <th>Created by</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                       
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" id="selectContactsModal" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">

                    @(Html.DevExtreme().DataGrid()
.ID("contactsList")
.Editing(editing =>
{
    editing.Mode(GridEditMode.Row);
    editing.AllowAdding(true);
    editing.AllowDeleting(true);
    editing.AllowUpdating(true);
})
.DataSource(d => d.Mvc()
.Controller("Contacts")
.UpdateAction("UpdateContact")
.InsertAction("AddContact")
.DeleteAction("DeleteContact")
.LoadAction("Get")
.Key("AutoKey")
)
.KeyExpr("AutoKey")
.Selection(s => s.Mode(SelectionMode.Multiple))
.Height(700)
.SearchPanel(s => s
.Visible(true)
.Placeholder("Search")
.SearchVisibleColumnsOnly(true)
)
.ShowRowLines(true)
.ShowBorders(true)
.ColumnAutoWidth(true)
.OnToolbarPreparing("toolbarPreparingContacts")
.OnSelectionChanged("onSelectedContactsChanged")
.Selection(S => S.Mode(SelectionMode.Multiple))
.Columns(columns =>
{
    columns.Add().DataField("Name")

        .Caption("Name");

    columns.Add().DataField("Phone")
        .Caption("Phone Number");

    columns.Add().DataField("Email")
        .Caption("Email Address");

})
        )
                </div>
            </div>
        </div>


        <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" id="selectSearchKeysModal" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    @(Html.DevExtreme().DataGrid()
.ID("searchKeysList")
.Editing(editing =>
{
    editing.Mode(GridEditMode.Row);
    editing.AllowAdding(true);
    editing.AllowDeleting(true);
    editing.AllowUpdating(true);
})
.DataSource(d => d.Mvc()
.Controller("SearchKeys")
.UpdateAction("UpdateKey")
.InsertAction("AddKey")
.DeleteAction("DeleteKey")
.LoadAction("Get")
.Key("AutoKey")
).KeyExpr("AutoKey")
.Height(700)
.Selection(S => S.Mode(SelectionMode.Multiple))
.SearchPanel(s => s
.Visible(true)
.Placeholder("Search")
.SearchVisibleColumnsOnly(true)
)
.ShowRowLines(true)
.ShowBorders(true)
.ColumnAutoWidth(true)
.OnToolbarPreparing("toolbarPreparingSearchKeys")
.OnSelectionChanged("onSelectedSearchKeysChanged")
.Columns(columns =>
{
    columns.Add().DataField("Name")
        .Caption("Name");

})
        )
                </div>
            </div>
        </div>

        <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" id="updateModal" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">

                    @{var asyncSettings2 = new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = "api/Upload/Update", ChunkSize = Int32.MaxValue }; }

                    <div>
                        <ejs-uploader success="onUpdateSuccess" multiple="false" id="updateFiles" uploading="onFileUpdate" maxFileSize="@Int32.MaxValue" asyncSettings="@asyncSettings2" autoUpload="false"></ejs-uploader>
                        <ejs-scripts></ejs-scripts>

                        <button onclick="startUpdate()" class="btn btn-lg btn-block btn-primary">
                            <i class="fa fa-cloud-upload mr-3"></i> Update
                        </button>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- ./ Content -->
    <!-- Footer -->
    <footer class="content-footer d-print-none">
        <div>© 2020 Malafatee </div>
    </footer>
    <!-- ./ Footer -->
</div>
<!-- ./ Content body -->

@section SidebarSection{
    <div class="sidebar" id="upload-detail" style="width:800px">
        <div class="sidebar-header">
            <h4>Upload Detail</h4>
            <a onclick="cancelupload();" id="uploadDetailsCloseBtn" class="btn btn-light btn-floating sidebar-close-btn">
                <i class="ti-angle-right"></i>
            </a>

        </div>
        <div class="sidebar-content">
            <div class="row mb-3">
                <div class="col-md-5">Note:</div>
                <input type="text" id="txtNote" class="form-control col-md-7" />

            </div>
            <br />
            <div class="row mb-3">
                <div class="col-md-5">Contacts:</div>
                <a class="col-md-7" data-toggle="modal" id="txtSelectContacts" href="#selectContactsModal">Click to Select</a>
            </div>
            <div class="row mb-3">
                <div class="col-md-5">Search Keys:</div>
                <a class="col-md-7" data-toggle="modal" id="txtSelectKeys" href="#selectSearchKeysModal">Click to Select</a>
            </div>
            <div class="row mb-3 uploadFilesDiv">
                @{
                    var asyncSettings = new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = "api/Upload/Save", RemoveUrl = "api/Upload/Remove", ChunkSize = Int32.MaxValue };
                }
                <ejs-uploader success="onUploadSuccess" data-required-message="* Choose your image to upload" required data-msg-containerid="uploadError" id="uploadFiles" beforeUpload="onBeforeUpload" uploading="onFileUpload" maxFileSize="@Int32.MaxValue" asyncSettings="@asyncSettings" autoUpload="false"></ejs-uploader>
                <ejs-scripts></ejs-scripts>

            </div>


            <br />
        </div>
        <div class="sidebar-footer">
            <button onclick="startUpload()" class="btn btn-lg btn-block btn-primary">
                <i class="fa fa-cloud-upload mr-3"></i> Upload
            </button>
        </div>
    </div>

}
