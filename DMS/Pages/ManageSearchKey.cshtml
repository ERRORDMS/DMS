@page
@model DMS.Pages.ManageSearchKeyModel
@{
    ViewData["Title"] = Localizer["Title"];
    Layout = "~/Pages/_Layout.cshtml";

    long AutoKey = 0;

    AutoKey = Convert.ToInt64(Request.Query["AutoKey"]);


}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<style>
    .empty_field {
        display: none;
        margin-left: 2rem;
        color: rgb(250,82,82);
    }
    .already_exists {
        display: none;
        margin-left: 2rem;
        color: rgb(250,82,82);
    }
</style>
<h2 class="content-block">@Localizer["ManageKey"]</h2>


@if (AutoKey != 0)
{

    <script>

        $(document).ready(function () {


            $('#txtName').val(getVal());
            $('#txtName').focus();
            $('#txtName').blur();

            });

        function getVal()
{
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "api/SearchKeys/Name?AutoKey=" + @AutoKey, false );
    xmlHttp.send();
    return xmlHttp.responseText;
        }

        function saveCon() {
            $(document).ready(function () {
                $(".content-block").click(function () {
                    window.onkeyup = function () {
                        $('.empty_field').fadeOut(0);
                        $(".already_exists").fadeOut(100);
                    }
                })
            })
            if (txtName.value == '') {
                $('.empty_field').fadeIn(100)
                return;
            }
            if (txtName.value !== '') {
                $('.empty_field').fadeOut(0)
            }
            const xhr = new XMLHttpRequest();

            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    var t = this.responseText;
                    var obj = JSON.parse(t);

                    var statusCode = obj.StatusCode;
                    if (statusCode == 0) {
                      window.location = "Index";
                    }
                    if (statusCode == 105) {
                        $(".already_exists").fadeIn(100);
                    } else {
                        $(".already_exists").fadeOut(100);
                    }
              }
            }

        xhr.open("POST", 'api/SearchKeys/Save', true);

            const fd = new FormData();

            fd.append('AutoKey', @AutoKey);
            fd.append('Name', txtName.value);
            xhr.send(fd);
        }


        function deleteCon() {
            const xhr = new XMLHttpRequest();

        xhr.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
            window.location = "Index";
            }
        }

        xhr.open("POST", 'api/SearchKeys/Delete', true);

            const fd = new FormData();

            fd.append('AutoKey', @AutoKey);
            xhr.send(fd);

        }

    </script>

    <div class="empty_field">
        @Localizer["MissingArgs"]
    </div>
    <div class="already_exists">
        @Localizer["Exists"]
    </div>
    @(Html.DevExtreme().TextBox()

                .Placeholder(Localizer["SearchKeyCol"].Value)
                        .ElementAttr("class", "content-block")
                        .Name("txtName")
    )

    <br />
    @(Html.DevExtreme().Button()
        .Icon("save")
        .Text(Localizer["Save"].Value)
        .OnClick("saveCon")
        .ElementAttr("class", "content-block")

    )
    @(Html.DevExtreme().Button()
        .Icon("trash")
        .Text(Localizer["DeleteKey"].Value)
        .OnClick("deleteCon")
        .ElementAttr("class", "content-block")

    )
}
else
{
    @(Html.DevExtreme().DataGrid()
        .ID("searchKeysList")

.DataSource(d => d.Mvc()
    .Controller("SearchKeys")
    .LoadAction("Get")
    .Key("AutoKey")
).KeyExpr("AutoKey")
            .ShowRowLines(true)
            .ShowBorders(true)
            .ColumnAutoWidth(true)
                    /*.RowDragging(rd => rd
                        .AllowDropInsideItem(true)
                        .AllowReordering(true)
                        .OnDragChange("onDragChange")
                        .OnReorder("onReorder")
                        .ShowDragIcons(true)
                    )*/
                    .ElementAttr("class", "content-block")

            .Columns(columns =>
            {
                columns.Add().DataField("Name")
                    .Caption(Localizer["SearchKeyCol"].Value);
                columns.Add()
               .Caption(Localizer["Manage"].Value)
               .Width(100)
               .Alignment(HorizontalAlignment.Center)
               .AllowFiltering(false)
               .AllowSorting(false)
               .CellTemplate(new JS("cellTemplate"));


            })
        )
}

<script>

    //<![CDATA[
    function cellTemplate(element, cellInfo) {
        $('<a/>')
            .text('@Localizer["Manage"]')
            .click(function () {
                onEdit(element, cellInfo);
            })
            .appendTo(element);
    }

    function onEdit(element, cellinfo) {
        var autokey = cellinfo.data.AutoKey;

        window.location.href = 'ManageSearchKey?AutoKey=' + autokey;
    }
</script>