@using Microsoft.AspNetCore.Identity
@using DMS.Areas.Identity.Data
@inject SignInManager<DMSUser> SignInManager
@inject UserManager<DMSUser> UserManager


<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>DMS</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <link rel="stylesheet"
          href="https://use.fontawesome.com/releases/v5.6.3/css/all.css"
          integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/"
          crossorigin="anonymous" />
    <link rel="stylesheet" href="~/css/vendor.css" asp-append-version="true" />
   <!-- --> <link rel="stylesheet" href="~/css/Site.css" />
    <link rel="stylesheet" href="~/css/navbar.css"/>
    <script src="~/js/vendor.js" asp-append-version="true"></script>
</head>

<body>
    <div id="app-side-nav-outer-toolbar">
        <!--
        <div class="layout-header">
            @(Html.DevExtreme().Toolbar()
                .Items(items =>
                        {
                    items.Add()
                        .Widget(w => w
                            .Button()
                            .Icon("menu")
                            .OnClick("DMS.onMenuButtonClick")
                        )
                        .Location(ToolbarItemLocation.Before)
                        .CssClass("menu-button");
                    items.Add()
                        .Html("<div>DMS</div>")
                        .Location(ToolbarItemLocation.Before)
                        .CssClass("header-title");
                })
            )
        </div>-->
        <div class="layout-body">
            @(Html.DevExtreme().Drawer()
                .ID("layout-drawer")
                .Position(DrawerPosition.Left)
                .Opened(new JS("DMS.restoreDrawerOpened()"))
                .Content(@<text>
                            <div id="layout-drawer-scrollview" class="with-footer">
                                <div class="content">
                                    @RenderBody()
                                </div>
                                <div class="content-block">
                                    <div class="content-footer">
                                        <div id="footer">
                                            Copyright (c) 2000-2019 Developer Express Inc.
                                            <br />
                                            All trademarks or registered trademarks are property of their respective owners.
                                        </div>
                                    </div>
                                </div>
                            </div>
                </text>)
            )
        </div>

    </div>


    <nav class="navbar">
        <ul class="navbar-nav">
            <li class="logo">
                <a href="#" class="nav-link">
                    <span class="link-text logo-text">DMS</span>
                </a>
            </li>
            @if (SignInManager.IsSignedIn(User))
            {
                <li class="nav-item" style="display: none">
                    <a href="/Identity/Account/Register" class="nav-link">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="link-text">Sign up</span>
                    </a>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <a href="/Identity/Account/Register" class="nav-link">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="link-text">Sign up</span>
                    </a>
                </li>
            }

            @if (SignInManager.IsSignedIn(User))
            {
                <li class="nav-item" style="display: none">
                    <a href="/Identity/Account/Login" class="nav-link">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="link-text">Login</span>
                    </a>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <a href="/Identity/Account/Login" class="nav-link">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="link-text">Login</span>
                    </a>
                </li>
            }

            @if (SignInManager.IsSignedIn(User))
            {
                <li class="nav-item">
                    <a href="#" class="nav-link">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="link-text">Dashboard</span>
                    </a>
                </li>
            }
            else
            {
                <li class="nav-item" style="display: none">
                    <a href="#" class="nav-link">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="link-text">Dashboard</span>
                    </a>
                </li>
            }
            <li class="nav-item">
                <span class="nav-link show-childs"><i class="fas fa-sign-in-alt"></i>Categories</span>
                <ul class="navbar-nav-1">
                    <li class="nav-item child-one" style="display: none">
                        <a href="/addCategory" class="nav-link">
                            <i class="fas fa-sign-in-alt"></i>
                            <span class="link-text">Add Categories</span>
                        </a>
                    </li>
                    <li class="nav-item child-two" style="display: none">
                        <a href="" class="nav-link">
                            <i class="fas fa-sign-in-alt"></i>
                            <span class="link-text">Manage Categoris</span>
                        </a>
                    </li>
                </ul>
            </li>
            @if (SignInManager.IsSignedIn(User))
            {
                <li class="nav-item">
                    <a href="/Identity/Account/Manage" class="nav-link">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="link-text">Profile</span>
                    </a>
                </li>
            }
            else
            {
                <li class="nav-item" style="display: none">
                    <a href="/Identity/Account/Manage" class="nav-link">
                        <i class="fas fa-sign-in-alt"></i>
                        <span class="link-text">Profile</span>
                    </a>
                </li>
            }

            <li class="nav-item">
                @if (SignInManager.IsSignedIn(User))
                {
                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Home", new { area = "" })" method="post">
                        <button type="submit" class="nav-link"><span class="link-text">Logout</span></button>
                    </form>
                }
                else
                {
                    <div>
                        <h4>Hello</h4>
                    </div>
                }
            </li>

        </ul>
    </nav>

    <script>

        var DMS = (function () {

            var DRAWER_OPENED_KEY = "DMS-drawer-opened";

            var breakpoints = {
                xSmallMedia: window.matchMedia("(max-width: 599.99px)"),
                smallMedia: window.matchMedia("(min-width: 600px) and (max-width: 959.99px)"),
                mediumMedia: window.matchMedia("(min-width: 960px) and (max-width: 1279.99px)"),
                largeMedia: window.matchMedia("(min-width: 1280px)")
            };

            function getDrawer() {
                return $("#layout-drawer").dxDrawer("instance");
            }

            function restoreDrawerOpened() {
                var isLarge = breakpoints.largeMedia.matches;
                if (!isLarge)
                    return false;

                var state = sessionStorage.getItem(DRAWER_OPENED_KEY);
                if (state === null)
                    return isLarge;

                return state === "true";
            }

            function saveDrawerOpened() {
                sessionStorage.setItem(DRAWER_OPENED_KEY, getDrawer().option("opened"));
            }

            function updateDrawer() {
                var isXSmall = breakpoints.xSmallMedia.matches,
                    isLarge = breakpoints.largeMedia.matches;

                getDrawer().option({
                    openedStateMode: isLarge ? "shrink" : "overlap",
                    revealMode: isXSmall ? "slide" : "expand",
                    minSize: isXSmall ? 0 : 60,
                    shading: !isLarge,
                });
            }

            function init() {
                $("#layout-drawer-scrollview").dxScrollView({ direction: "vertical" });

                $.each(breakpoints, function (_, size) {
                    size.addListener(function (e) {
                        if (e.matches)
                            updateDrawer();
                    });
                });

                updateDrawer();
            }

            function navigate(url, delay) {
                setTimeout(function () { location.href = url }, delay);
            }

            function onMenuButtonClick() {
                getDrawer().toggle();
                saveDrawerOpened();
            }

            function onTreeViewItemClick(e) {
                var drawer = getDrawer();
                var savedOpened = restoreDrawerOpened();
                var actualOpened = drawer.option("opened");

                if (!actualOpened) {
                    drawer.show();
                } else {
                    var willHide = !savedOpened || !breakpoints.largeMedia.matches;
                    var willNavigate = !e.itemData.selected;

                    if (willHide)
                        drawer.hide();

                    if (willNavigate)
                        navigate(e.itemData.path, willHide ? 400 : 0);
                }
            }

            return {
                init: init,
                restoreDrawerOpened: restoreDrawerOpened,
                onMenuButtonClick: onMenuButtonClick,
                onTreeViewItemClick: onTreeViewItemClick
            };
        })();
        $(document).ready(function () {
            $(".show-childs").click(function () {
                $('.child-one').fadeIn(100, function () {
                    $('.child-two').fadeIn(100);
                })
            })
        })
        document.addEventListener("DOMContentLoaded", function documentReady() {
            this.removeEventListener("DOMContentLoaded", documentReady);
            DMS.init();
        });
    </script>

    @RenderSection("Scripts", required: false)

</body>

</html>
