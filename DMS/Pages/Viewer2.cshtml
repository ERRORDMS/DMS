@using GleamTech.AspNet.Core
@using GleamTech.DocumentUltimate
@using GleamTech.DocumentUltimate.AspNet
@using GleamTech.DocumentUltimate.AspNet.UI

@{
    /*

        string InfoAutoKey = "";
        string LineAutoKey = "";
        Microsoft.Extensions.Primitives.StringValues queryVal;

        if (Context.Request.Query.TryGetValue("InfoAutoKey", out queryVal))
        {
            InfoAutoKey = queryVal.FirstOrDefault();
        }

        if (Context.Request.Query.TryGetValue("LineAutoKey", out queryVal))
        {
            LineAutoKey = queryVal.FirstOrDefault();
        }

     string userId = "";

    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;

    if (claimsIdentity != null)
    {
        var c = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);

        userId = c.Value;
    }





    // string userId = User.FindFirst("userdata").Value;


    DMS.Database.SQLHelper helper = new DMS.Database.DataManager(userId).SQLHelper;

    var Ext = helper.SelectWithWhere(DMS.Database.Tables.DocumentLines,
        "Ext",
        "InfoAutoKey = '" + InfoAutoKey + "'");

    var fn = InfoAutoKey + "_" + LineAutoKey + "." +  Ext;

    var arr = helper.ExecuteScalar<byte[]>("select TOP 1 file_stream from " + DMS.Database.Tables.Images + " where name = '" + fn + "'");

    var documentViewer = new DocumentViewer
    {
        //Width = GleamTech.AspNet.UI.CssLength.Percentage(100),
        //Height = GleamTech.AspNet.UI.CssLength.Percentage(100),
        // DisplayMode = GleamTech.AspNet.UI.DisplayMode.Viewport,

        ClientEvents = new DocumentViewerClientEvents() { DocumentLoaded = "documentViewerDocumentLoaded" },
        DocumentSource = new DocumentSource(new DocumentInfo(fn), arr)
    };
    */

    Microsoft.Extensions.Primitives.StringValues queryVal;


    string EncryptedString = "";


    if (Context.Request.Query.TryGetValue("f", out queryVal))
    {
        EncryptedString = queryVal.FirstOrDefault();
    }


    EncryptedString = EncryptedString.Replace("convhash", "#").Replace("convslash", "/").Replace("convand", "&").Replace("convqmark", "?").Replace("convplus", "+");
    string DecryptedString = DMS.Models.StringCipher.Decrypt(EncryptedString, "Yom@1234");

    string userId = DecryptedString.Split("|")[0];

    if(userId == "-1")
    {

        var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;

        if (claimsIdentity != null)
        {
            var c = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);

            userId = c.Value;
        }

    }
    string InfoAutoKey = DecryptedString.Split("|")[1];
    string LineAutoKey = DecryptedString.Split("|")[2];

    DMS.Database.SQLHelper helper = new DMS.Database.DataManager(userId).SQLHelper;

    var Ext = helper.SelectWithWhere(DMS.Database.Tables.DocumentLines,
        "Ext",
        "InfoAutoKey = '" + InfoAutoKey + "'");

    var fn = InfoAutoKey + "_" + LineAutoKey + "." + Ext;

    var arr = helper.ExecuteScalar<byte[]>("select TOP 1 file_stream from " + DMS.Database.Tables.Images + " where name = '" + fn + "'");

    var documentViewer = new DocumentViewer
    {
        //Width = GleamTech.AspNet.UI.CssLength.Percentage(100),
        //Height = GleamTech.AspNet.UI.CssLength.Percentage(100),
        // DisplayMode = GleamTech.AspNet.UI.DisplayMode.Viewport,

        ClientEvents = new DocumentViewerClientEvents() { DocumentLoaded = "documentViewerDocumentLoaded" },
        DocumentSource = new DocumentSource(new DocumentInfo(fn), arr)
    };

}
    <html>
    <head>
        <title>Document Viewer</title>

        @this.RenderHead(documentViewer)
    </head>
    <body>
        @this.RenderBody(documentViewer)
        <script>
            function documentViewerDocumentLoaded(sender, e) {
                console.log(sender);
            }
        </script>
        <button class="shareButton">Share on Whatsapp</button>
    </body>
</html>
