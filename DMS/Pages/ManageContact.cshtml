@page
@model DMS.Pages.ManageContactModel
@{
    ViewData["Title"] = Localizer["Title"];
    Layout = "~/Pages/_Layout.cshtml";

    long AutoKey = 0;

    AutoKey = Convert.ToInt64(Request.Query["AutoKey"]);


}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<!-- Syncfusion Essential JS 2 Styles -->
<link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/material.css" />
<style>
    .empty_field {
        color: rgb(250,82,82);
        margin-left: 2rem;
        display: none;
    }

    .already_exists {
        color: rgb(250,82,82);
        margin-left: 2rem;
        display: none;
    }
    .add_contact_form {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    #header {
        position: fixed;
        width: 100%;
        height: 100px;
        background: rgb(255,255,255);
        z-index: 2000;
        box-shadow: 0px 2px 5px black;
        padding-bottom: 2rem
    }
    form {
        text-align: center;
    }

    .contact_input {
        width: 360px;
    }

    .add_Contact_button {
        width: 100%;
        height: 50px;
        border-radius: 15px;
        outline: none;
        border: none;
        background-image: linear-gradient(to right, rgb(255,87,34), rgb(255,92,38), rgb(255,114,45));
        background-size: 200%;
        font-size: 1.2rem;
        color: #fff;
        font-family: 'Poppins', sans-serif;
        text-transform: uppercase;
        margin: 1rem 0;
        cursor: pointer;
        transition: .5s;
    }

        .add_Contact_button:hover {
            box-shadow: 1px 1px 4px black;
        }

    .error {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .contact_found, .server_error {
        color: rgb(255,82,82);
        display: none;
    }

    .empty_field {
        color: rgb(255,82,82);
        display: none;
    }

    .inputs {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .dataGrid {
        margin-top:7rem;
    }
    .space {
        margin-left: 2rem;
    }
</style>
<!-- Syncfusion Essential JS 2 Scripts -->
<script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>



@if (AutoKey != 0)
{

    <script>

        $(document).ready(function () {


            $('#txtName').val(getVal());
            $('#txtName').focus();
            $('#txtName').blur();

            });

        function getVal() {
             var xmlHttp = new XMLHttpRequest();
                 xmlHttp.open("GET", "api/Contacts/Name?AutoKey=" + @AutoKey, false );
                 xmlHttp.send();
            return xmlHttp.responseText;
        }

        function saveCon() {

            $(document).ready(function () {
                $('.content-block').click(function () {
                    window.onkeyup = function () {
                        $('.empty_field').fadeOut(100);
                        $(".already_exists").fadeOut(100);
                    }
                })
            })
            if (txtName.value == '') {
                $('.empty_field').fadeIn(100)
                return;
            }
            if (txtName.value !== '') {
                $('.empty_field').fadeOut(0)
            }
            const xhr = new XMLHttpRequest();

            xhr.onreadystatechange = function () {
              if (this.readyState == 4 && this.status == 200) {
                  var t = this.responseText;
                  var obj = JSON.parse(t);

                  var statusCode = obj.StatusCode;
                  if (statusCode == 0) {
                      window.location = "Index";
                  }
                  if (statusCode == 105) {
                      $(".already_exists").fadeIn(100);
                  } else {
                      $(".already_exists").fadeOut(100);
                  }
              }
            }

        xhr.open("POST", 'api/Contacts/Save', true);

            const fd = new FormData();

            fd.append('AutoKey', @AutoKey);
            fd.append('Name', txtName.value);
            xhr.send(fd);
        }


        function deleteCon() {
            const xhr = new XMLHttpRequest();

        xhr.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
            window.location = "Index";
            }
        }

        xhr.open("POST", 'api/Contacts/Delete', true);

            const fd = new FormData();

            fd.append('AutoKey', @AutoKey);
            xhr.send(fd);

        }

    </script>

    <div class="empty_field">
        @Localizer["MissingArgs"]
    </div>
    <div class="already_exists">
        @Localizer["Exists"]
    </div>
    <h2 class="content-block">@Localizer["ManageContact"]</h2>
    <div>

    </div>
    @(Html.DevExtreme().TextBox()

                .Placeholder(Localizer["ContactNameCol"].Value)
                        .ElementAttr("class", "content-block")
                        .Name("txtName")
    )

    <br />
    @(Html.DevExtreme().Button()
        .Icon("save")
        .Text(Localizer["Save"].Value)
        .OnClick("saveCon")
        .ElementAttr("class", "content-block")

    )
    @(Html.DevExtreme().Button()
        .Icon("trash")
        .Text(Localizer["DeleteCon"].Value)
        .OnClick("deleteCon")
        .ElementAttr("class", "content-block")

    )
}
else
{
    <div class="error">
        <div class="contact_found">
            @Localizer["AlreadyExists"]
        </div>
        <div class="server_error">
            @Localizer["InternalError"]
        </div>
        <div class="empty_field">
            @Localizer["MissingArgs"]
        </div>
    </div>
    <div id="header">
        <div class="add_contact_form">
            <h2 class="content-block" style="font-size: 20px; margin-left: 1rem;">@Localizer["ManageContact"]</h2>
            <form action="javascript:addContact()">
                <div class="inputs">
                    @(Html.DevExtreme().TextBox()
                .Mode(TextBoxMode.Text)
                .Name("ContactName")
                .Placeholder(Localizer["ContactName"].Value)
                .ElementAttr("class", "contact_input")
                .HoverStateEnabled(true)
            )
                    <span class="space"></span>
                    @(Html.DevExtreme().DateBox()
                .Type(DateBoxType.Date)
                .Name("birthdayDateBox")
                .Placeholder(Localizer["Birthday"].Value)
                .Value(DateTime.Now)
                .ShowClearButton(true)
                .Max(DateTime.Now)
            )
                    <span class="space"></span>

                    @(Html.DevExtreme().Button()
        .Icon("plus")
        .Text(Localizer["AddContact"].Value)
        .OnClick("addContact")

    )
                </div>
            </form>
        </div>
    </div>
    <div class="dataGrid">
        @(Html.DevExtreme().DataGrid()
        .ID("contactsList")

.DataSource(d => d.Mvc()
    .Controller("Contacts")
    .LoadAction("Get")
    .Key("AutoKey")
).KeyExpr("AutoKey")
            .ShowRowLines(true)
            .ShowBorders(true)
            .ColumnAutoWidth(true)
                    /*.RowDragging(rd => rd
                        .AllowDropInsideItem(true)
                        .AllowReordering(true)
                        .OnDragChange("onDragChange")
                        .OnReorder("onReorder")
                        .ShowDragIcons(true)
                    )*/
                    .ElementAttr("class", "content-block")

            .Columns(columns =>
            {
                columns.Add().DataField("Name")
                    .Caption(Localizer["ContactNameCol"].Value);
                columns.Add()
               .Caption(Localizer["Manage"].Value)
               .Width(100)
               .Alignment(HorizontalAlignment.Center)
               .AllowFiltering(false)
               .AllowSorting(false)
               .CellTemplate(new JS("cellTemplate"));


            })
        )
    </div>
    
}

<script>

    //<![CDATA[
    function cellTemplate(element, cellInfo) {
        $('<a/>')
            .text('@Localizer["Manage"]')
            .click(function () {
                onEdit(element, cellInfo);
            })
            .appendTo(element);
    }

    function onEdit(element, cellinfo) {
        var autokey = cellinfo.data.AutoKey;

        window.location.href = 'ManageContact?AutoKey=' + autokey;
    }
    function addContact() {
        if (!ContactName.value) {
            $(document).ready(function () {
                $('.empty_field').fadeIn(100);
            });
            return;
        } else if (!birthdayDateBox.value) {
            $(document).ready(function () {
                $(".empty_field").fadeIn(100);
            })
        } else {
            $('.empty_field').fadeOut(0);
            const xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    var t = this.response;
                    var obj = JSON.parse(t);
                    var statusCode = obj.StatusCode;

                    if (statusCode == 0) {
                        $(document).ready(function () {
                            $(".contact_found").fadeOut(0, function () {
                                $(".server_error").fadeOut(0, function () {
                                    $('.empty_field').fadeOut(0)
                                })
                            })
                        });
                        window.location = '/';

                    }
                    if (statusCode == 103) {
                        $(document).ready(function () {
                            $(".server_error").fadeIn(100);
                        })
                    } else {
                        $('.server_error').fadeOut(0)
                    }
                    if (statusCode == 105) {
                        $(".contact_found").fadeIn(100);
                    } else {
                        $('.contact_found').fadeOut(0);
                    }
                }
            }
            var contact = ContactName.value;
            const fd = new FormData();
            fd.append("Name", contact);
            fd.append('Birthday', birthdayDateBox.value)
            xhr.open("POST", "api/Contacts/addContact", true);
            xhr.send(fd);
        }

    }
</script>